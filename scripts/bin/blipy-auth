#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
 Blipy - A Python API for blip.pl

 authors: Cezary Statkiewicz (cezio [at] thelirium.net), Patryk Zawadzki <patrys@pld-linux.org>
 website: http://github.com/patrys/blipy/tree/master
 license: GNU Lesser General Public License http://www.gnu.org/licenses/lgpl.html
 API: http://www.blip.pl/api-0.02.html
 version: 0.02+oauth
 
"""
"""
This script is for setting OAuth access key for a blipy application. 
Prior to use it, you must obtain consumer_key and consumer_secret from http://blip.pl/profile#oauth-tab

"""

import os
import sys
import pwd
import optparse
import oauth
sys.path.insert(0, os.path.join( os.path.dirname(__file__), '../../'))
import blipy, blipy.utils

optparser = optparse.OptionParser()
usage =u"""%(file)s [OPCJE] [UŻYTKOWNIK]

%(file)s generuje i autoryzuje dostęp aplikacji dla użytkownika. Jesli nie został podany UŻYTKOWNIK,
 zostanie użyty %(user)s"""%{'file': os.path.basename(__file__), 'user': pwd.getpwuid(os.getuid())[0]  }

optparser.set_usage(usage)
optparser.add_option('-i', '--identity-file', dest='identity_file', help=u'Wskazuje na plik z konfiguracją dostępu [domyślnie ~/.blipy/UŻYTKOWNIK-APLIKACJA.id] ', default=None)
optparser.add_option('-a', '--application', dest='application', help=u'Aplikacja, którą chcesz autoryzować [domyślnie blipy]', default='blipy')
optparser.add_option('-f', '--force', action='store_true', dest='force', help=u'Flaga, czy nadpisać istniejący plik konfiguracji dostępu')
optparser.add_option('-k', '--consumer-key', dest='consumer_key', help=u'consumer key', required = True)
optparser.add_option('-s', '--consumer-secret', dest='consumer_secret', help=u'consumer secret', required = True)

if __name__ == '__main__':

    options, args = optparser.parse_args()
    if len(args)==1:
        user = args[0]
    else:
        user = pwd.getpwuid(os.getuid())[0]
    application = options.application
    identity_file = os.path.abspath( os.path.expanduser( options.identity_file or '~/.blipy/%s-%s.id'%(user, application)))
    if os.path.exists(identity_file) and options.force != True:
        optparser.print_help()
        sys.exit('\nPlik %s już istnieje. użyj flagi -f, aby nadpisać.'%(identity_file))

    if not os.path.exists( os.path.dirname( identity_file)):
        os.makedirs( os.path.dirname( identity_file))
    if not os.path.exists( identity_file):
        open(identity_file, 'w').close()

    conf_file = blipy.utils.BlipConfig(identity_file)
    conf_file.start_auth(user, application, options.consumer_key, options.consumer_secret)
    conf_file.save()



